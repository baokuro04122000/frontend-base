openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://spg.tpptechnology.com/api
info:
  description: This is a SPG API document
  version: 1.0.1
  title: SPG API document
  contact:
    email: tpp@tpptechnology.com
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
tags:
  - name: Auth
    description: Authentication
  - name: Admin
    description: Admin
  - name: Contract
    description: Contract
  - name: WithDraw Request
    description: WithDraw Request

paths:
  /auth/login:
    post:
      security: []
      tags:
        - Auth
      description: |
        User Login by Email and Password
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCredentials"
        description: email and password
      responses:
        "200":
          description: login successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCredentialResponse"
        "400":
          description: invalid email or password format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: incorrect email or password
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /auth/logout:
    post:
      tags:
        - Auth
      description: Users can only log themselves out, not other users
      responses:
        "204":
          description: Logout was successful
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /auth/forgot-password:
    post:
      tags:
        - Auth
      summary: Forgot password
      description: Check email and send link to reset password
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ForgotPassword"
        description: Request Email
      responses:
        "200":
          description: Email matched
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "400":
          description: Invalid Email Format/Email is not Registered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /auth/roles:
    get:
      tags:
        - Auth
      summary: list all roles
      description: only admin can list all roles
      responses:
        200:
          description: list all roles successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleListResponse"
        "403":
          description: Not permission to see all roles
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /users:
    get:
      tags:
        - Admin
      summary: list all users
      description: only admin can list all users
      parameters:
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: offset
          schema:
            type: integer
            example: "0"
        - in: query
          name: limit
          schema:
            type: integer
            example: "10"
        - in: query
          name: sort_by
          schema:
            type: string
            example: "id"
        - in: query
          name: order_by
          schema:
            type: string
            example: "desc"

      responses:
        "200":
          description: list all users successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserListResponse"
        "400":
          description: invalid format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Not permission to see all users
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /users/{id}:
   get:
      tags:
        - Admin
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        "200":
          description: get user successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDetailNew"
        "400":
          description: invalid format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Not permission to see all users
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  
  /users/reset-password:
    put:
      tags:
        - Auth
      summary: reset password
      description: link to reset password
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResetPassword"
        description: Need password to change

      responses:
        "200":
          description: Password changed successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "400":
          description: Invalid Format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /users/create:
    post:
      security: 
      - bearerAuth: []
      tags:
        - Admin
      summary: Create new users
      description: Create new users
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreate"
        description: Access token is used by admin

      responses:
        "201":
          description: An email will be sent to user's email address with a link to activate the account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "400":
          description: Invalid format/ Email already existed/This field is required (blank field)/Invalid email format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
                
                
  /users/assign-role:
    put:
      tags:
        - Admin
      summary: update users role
      description: update users role
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRoleUpdate"
        description: userid and role need to be updated

      responses:
        "204":
          description: update successful
        "400":
          description: invalid format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: not permission
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /users/is-active:
    put:
      security:
      - bearerAuth: []
      tags:
        - Admin
      summary: Activate and deactivate an account user
      description: User's status
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserIsActiveRequest"
        description: Users active or not
      responses:
        "200":
          description: Status updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "400":
          description: Invalid format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Not permission
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
                
  /users/admin-reset-password:
    put:
      security:
      - bearerAuth: []
      tags:
        - Admin
      summary: Admins reset password for users
      description: Admins reset password for users
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminResetPassword"
        description: Userid with new password

      responses:
        "204":
          description: Update successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "400":
          description: Invalid format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Not Permission
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

      
  /users/name:
    put:
      security:
      - bearerAuth: []
      tags:
        - User
      summary: Update user's full name
      description: Update user's full name 
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserNameRequest"
        description: Userid and role need to be updated

      responses:
        "204":
          description: Update successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "400":
          description: Invalid format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Not Permission
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /users/create-role:
    post:
      security: 
      - bearerAuth: []
      tags:
        - Admin
      summary: Create new users
      description: Create new users
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRoleRequest"
        description: Access token is used by admin

      responses:
        "201":
          description: Successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
        "400":
          description:  Name already existed /This field is required (blank field)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /auth/roles/{id}: 
    get:
      tags:
        - Admin
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        "200":
          description: get role by ID successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleListByIdDetail"
        "400":
          description: invalid format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Not permission to see all users
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
                
  /auth/roles/: 
    get:
      tags:
        - Admin
      summary: list all role list
      description: only admin can list all roles
      parameters:
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: offset
          schema:
            type: integer
            example: "0"
        - in: query
          name: limit
          schema:
            type: integer
            example: "10"
        - in: query
          name: sort_by
          schema:
            type: string
            example: "id"
        - in: query
          name: order_by
          schema:
            type: string
            example: "desc"
      responses:
        "200":
          description: get all roles list successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleListByIdDetail"
        "400":
          description: invalid format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Not permission to see all roles
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
                
  /auth/permissions: 
    get:
      tags:
        - Admin
      summary: list all permission list
      description: only admin can list all permission
      responses:
        "200":
          description: get all permissions list successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionListDetail"
        "400":
          description: invalid format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Not permission to see all roles
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /contracts:
    get:
      tags:
        - Contract
      summary: get and filter contracts
      description: get and filter contracts
      parameters:
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: offset
          schema:
            type: integer
            example: "0"
        - in: query
          name: limit
          schema:
            type: integer
            example: "10"
        - in: query
          name: sort_by
          schema:
            type: string
            example: "id"
        - in: query
          name: order_by
          schema:
            type: string
            example: "desc"

      responses:
        "200":
          description: list contract successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContractListResponse"
        "400":
          description: invalid format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Not permission to see all users
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /contracts/{contract_id}:
    get:
      tags:
        - Contract
      parameters:
        - in: path
          name: contract_id
          schema:
            type: integer
          required: true
      responses:
        "200":
          description: get contract successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contract"
        "400":
          description: invalid format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Not permission to see all users
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /withdraw_requests:
    description: query withdraw request with filter
    summary: filter Withdraw Request
    get:
      tags:
        - WithDraw Request
      parameters:
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: offset
          schema:
            type: integer
            example: "0"
        - in: query
          name: limit
          schema:
            type: integer
            example: "10"
        - in: query
          name: sort_by
          schema:
            type: string
            example: "id"
        - in: query
          name: order_by
          schema:
            type: string
            example: "desc"

      responses:
        "200":
          description: get withdraw requests successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWithdrawRequest"
        "400":
          description: invalid format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Not permission to see all users
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags:
        - WithDraw Request
      summary: create new withdraw request
      description: create new withdraw request
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WithdrawRequest"
        description: filter
      responses:
        "201":
          description: get withdraw requests successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WithdrawRequest"
        "400":
          description: invalid format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Not permission to see all users
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /withdraw_requests/{withdraw_id}:
    get:
      tags:
        - WithDraw Request
      parameters:
        - in: path
          name: withdraw_id
          schema:
            type: integer
          required: true
      responses:
        "200":
          description: get withdraw requests successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WithdrawRequest"
    put:
      tags:
        - WithDraw Request
      summary: update withdraw request
      description: update WithdrawRequest
      parameters:
        - in: path
          name: withdraw_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WithdrawRequest"
        description: filter
      responses:
        "204":
          description: update successfully

        "403":
          description: Not permission to see update
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /withdraw_requests/{withdraw_id}/update-status-to-ready-to-collect:
    post:
      tags:
        - WithDraw Request
      parameters:
        - in: path
          name: withdraw_id
          schema:
            type: integer
          required: true

      responses:
        "200":
          description: get withdraw requests successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WithdrawRequest"
        "403":
          description: Not permission to change status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /withdraw_requests/{withdraw_id}/update-status-to-collected:
    post:
      tags:
        - WithDraw Request
      parameters:
        - in: path
          name: withdraw_id
          schema:
            type: integer
          required: true

      responses:
        "200":
          description: get withdraw requests successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WithdrawRequest"
        "403":
          description: Not permission to change status to collected
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /withdraw_requests/{withdraw_id}/cancel:
    post:
      tags:
        - WithDraw Request
      parameters:
        - in: path
          name: withdraw_id
          schema:
            type: integer
          required: true

      responses:
        "200":
          description: get withdraw requests successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WithdrawRequest"

        "403":
          description: Not permission to change status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UserCredentials:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          example: sipa@tpptechnology.com
        password:
          type: string
          example: abc#1234

    ForgotPassword:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          example: sipa@tpptechnology.com

    ResetPassword:
      type: object
      required:
        - password
      properties:
        password:
          type: string
          example: thanh11

    UserCredentialResponse:
      type: object
      properties:
        access_token:
          type: string
        data:
          type: object
          properties:
            id:
              type: integer
            email:
              type: string
            full_name:
              type: string
            is_admin:
              type: boolean
              example: false
            orgs:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
            roles:
              type: array
              items:
                $ref: "#/components/schemas/RoleDetail"

    ErrorResponse:
      description: Error responses are sent when an error (e.g. unauthorized, bad request) occurred.
      type: object
      required:
        - error
      properties:
        error:
          description: Error name.
          type: string
        error_code:
          type: integer
          format: int64
        error_message:
          description: Show detail about the error, debug information. This is usually not available and has to be enabled.
          type: string
    UserDetail:
      description: user detail information
      type: object
      properties:
        id:
          type: integer
          example: 1
        is_admin:
          type: boolean
          example: false
        email:
          type: string
          example: sipa@tpptechnology.com
        full_name:
          type: string
          example: huy tran
        orgs:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        roles:
          type: array
          items:
            $ref: "#/components/schemas/RoleDetail"
        status:
          type: boolean
          example: true
        last_Login:
          type: string
          example: "2002-12-02 15:00"
        created_at:
          type: string
          example: "2002-12-02 15:00"
        updated_at:
          type: string
          example: "2002-12-02 15:00"
          
    
    UserDetailNew:
      description: user detail information
      type: object
      properties:
        id:
          type: integer
          example: 1
        email:
          type: string
          example: sipa@tpptechnology.com
        full_name:
          type: string
          example: huy tran
        roles:
          type: array
          items:
            $ref: "#/components/schemas/RoleDetail"
        status:
          type: boolean
          example: 1
        last_Login:
          type: string
          example: "2005-24-06 15:00"
        created-at:
          type: string
          example: "2002-12-02 15:00"
        updated-at:
          type: string
          example: "2002-12-02 15:00"
            
    RoleId:
      description: Get Role Id detail information
      type: integer
      properties:
        id:
          type: integer
          example: 1 
          
    UserIsActiveRequest:
      description: Check users active
      type: object
      properties:
        id:
          type: integer
        is_active:
          type: boolean
    
    UpdateUserNameRequest:
      type: object
      required:
        - full_name
      properties:
        full_name:
          type: string
          example: Xuan Truong Vu
    
    CreateRoleRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: Xuan Truong Vu
          
    Response:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: Sent Email

    RoleDetail:
      description: role detail information
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Contract Team
        permissions:
          type: array
          items:
            type: string
        status:
          type: boolean
          example: 1
        total_users:
          type: integer
          example: 1
        created_at:
          type: string
          example: "2002-12-02 15:00"
        updated_at:
          type: string
          example: "2002-12-02 15:00"
    
    
    RoleListByIdDetail:
      description: role detail by id information
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Contract Team
        status:
          type: boolean
          example: true
        permissions:
          type: array
          items:
            $ref: "#/components/schemas/PermissionDetail"
        created_at:
          type: string
          example: "2022-09-09 05:30"
        updated_at:
          type: string
          example: "2022-09-09 05:30"
        total_users:
          type: integer
          example: 1
            
    PermissionDetail:
      description: permission detail information
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Users"
    
    PermissionNewDetail:
      description: permission detail information
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Users"
        status:
          type: boolean
          example: 1
    
    PermissionListDetail:
      description: permission detail information
      type: array
      items:
            $ref: "#/components/schemas/PermissionNewDetail"
        
          
    UserListResponse:
      description: list user detail
      type: object
      properties:
        offset:
          type: integer
        limit:
          type: integer
        sort:
          type: string
        total:
          type: integer
        totalPage:
          type: integer
        list:
          type: array
          items:
            $ref: "#/components/schemas/UserDetailNew"

    RoleListResponse:
      description: list user detail
      type: object
      properties:
        list:
          type: array
          items:
            $ref: "#/components/schemas/RoleDetail"
            
    UserRoleUpdate:
      description: update role for user
      type: object
      properties:
        id:
          type: integer
          example: 1
        role_ids:
          type: array
          items:
            $ref:  "#/components/schemas/RoleId"
        user_name: 
          type: string
          example: "Xuan Truong"
       
    AdminResetPassword:
      description: Create new users
      type: object
      properties:
        id:
          type: integer
          example: 1
        password:
          type: string
          example: truong123
    
    UserCreate:
      description: Create new users
      type: object
      properties:
        full_name:
          type: string
          example: huy tran
        email:
          type: string
          example: anhvu@tpptechonology.com
        roles:
          type: array
          items:
            $ref: "#/components/schemas/RoleId"
   
   

    Contract:
      description: Contract detail information
      type: object
      properties:
        id:
          type: integer
        code:
          type: string
        supply_vendor_name:
          type: string
        start_date:
          type: string
        end_date:
          type: string
        base_amount:
          type: integer
        actual_amount:
          type: integer
          
    Role:
      description: Role detail information
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        status:
          type: boolean
        start_date:
          type: string
        end_date:
          type: string
        base_amount:
          type: integer
        actual_amount:
          type: integer
          
    
    
    ContractListResponse:
      description: list contracts
      properties:
        offset:
          type: integer
        limit:
          type: integer
        total:
          type: integer
        list:
          type: array
          items:
            $ref: "#/components/schemas/Contract"

    WithdrawRequest:
      description: Withdraw detail information
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        contract_id:
          type: integer
        project_contractor_id:
          type: integer
        amount:
          type: integer
        request_date:
          type: string
        status:
          $ref: "#/components/schemas/WithdrawRequestStatus"

    WithdrawRequestStatus:
      type: string
      enum:
        - new
        - ready_to_collect
        - collected
        - cancelled

    ListWithdrawRequest:
      description: list withdraw request
      properties:
        offset:
          type: integer
        limit:
          type: integer
        total:
          type: integer
        list:
          type: array
          items:
            $ref: "#/components/schemas/WithdrawRequest"
